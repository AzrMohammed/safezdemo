# Generated by Django 2.2.6 on 2020-11-27 16:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='C19SymptomSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='NONE', max_length=50, null=True)),
                ('name_tamil', models.CharField(default='NONE', max_length=50, null=True)),
                ('seviarity', models.IntegerField(default=0)),
                ('note', models.CharField(max_length=250)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CMN_CommunicationPhysicalModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='MOD_DT_SLUG', max_length=8, unique=True, verbose_name='Slug')),
                ('communication_type', models.CharField(choices=[('ENTPRS', 'Enterprise'), ('PRSNL', 'Personal'), ('OFICIL', 'Official'), ('SECPAG', 'SecondPerson-Agent')], default='ENTPRS', help_text='MOD_DT_CHOICE_LIMITED', max_length=250, verbose_name='Communication Type')),
                ('is_person', models.BooleanField(default=True, help_text='MOD_DT_BOOL', verbose_name='Is actual person')),
                ('address_line_01', models.CharField(help_text='MOD_DT_TEXT', max_length=100, verbose_name='Address Line 1')),
                ('address_line_02', models.CharField(help_text='MOD_DT_TEXT', max_length=100, verbose_name='Address Line 2')),
                ('city', models.CharField(help_text='MOD_DT_TEXT', max_length=100, verbose_name='City')),
                ('district', models.CharField(help_text='MOD_DT_TEXT', max_length=100, verbose_name='District')),
                ('state', models.CharField(help_text='MOD_DT_TEXT', max_length=100, verbose_name='State')),
                ('country', models.CharField(help_text='MOD_DT_TEXT', max_length=100, verbose_name='Country')),
                ('pincode', models.CharField(help_text='MOD_DT_PINCODE', max_length=6, verbose_name='Pincode')),
            ],
        ),
        migrations.CreateModel(
            name='CMN_CommunicationVirtualModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='MOD_DT_SLUG', max_length=8, unique=True, verbose_name='Slug')),
                ('communication_type', models.CharField(choices=[('ENTPRS', 'Enterprise'), ('PRSNL', 'Personal'), ('OFICIL', 'Official'), ('SECPAG', 'SecondPerson-Agent')], default='PRSNL', help_text='MOD_DT_CHOICE_LIMITED', max_length=250, verbose_name='Communication Type')),
                ('is_person', models.BooleanField(default=True, help_text='MOD_DT_BOOL', verbose_name='Is actual person')),
                ('communication_channel_key', models.CharField(choices=[('PHN', 'PHONE'), ('EML', 'EMAIL'), ('SKP', 'SKYPE')], default='PHN', help_text='MOD_DT_CHOICE_LIMITED', max_length=250, verbose_name='Choice')),
                ('communication_channel_value', models.CharField(help_text='MOD_DT_TEXT', max_length=100, null=True, verbose_name='Details')),
            ],
        ),
        migrations.CreateModel(
            name='EPS_EnterpriseProfileModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='MOD_DT_SLUG', max_length=8, unique=True, verbose_name='Slug')),
                ('name', models.CharField(help_text='MOD_DT_NAME', max_length=30, verbose_name='Name')),
                ('GST_number', models.CharField(help_text='MOD_DT_TEXT', max_length=50, verbose_name='Text')),
                ('PAN_number', models.CharField(help_text='MOD_DT_TEXT', max_length=50, verbose_name='Text')),
                ('credit_limit', models.IntegerField(help_text='MOD_DT_NUMBER', verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='ItemMeasuementUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='NONE', max_length=50, null=True)),
                ('note', models.CharField(max_length=250)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=15, unique=True)),
                ('delivery_charges', models.FloatField(default=1.0, max_length=5)),
                ('status_note', models.CharField(default='NONE', max_length=200, null=True)),
                ('status', models.CharField(choices=[('OPD', 'ORDER_PLACED'), ('OCC', 'ORDER_CONFIRMED_BY_CUSTOMER'), ('OPU', 'ORDER_PICKEDUP'), ('ODD', 'ORDER_DELIVERED'), ('OCD', 'ORDER_CANCELLED')], default='OPD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_id', models.CharField(max_length=15, unique=True)),
                ('item_name', models.CharField(max_length=60)),
                ('item_quantity', models.PositiveSmallIntegerField(default=1)),
                ('item_price', models.FloatField(default=1.0, max_length=5)),
                ('status_note', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('IPL', 'O_ITEM_PLACED'), ('IPD', 'O_ITEM_PICKED'), ('INA', 'O_ITEM_NOT_AVAILABLE'), ('IRD', 'O_ITEM_REMOVED'), ('IRJ', 'O_ITEM_REJECTED')], default='IPL', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('measurement_unit', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='measurement_unit', to='GEN.ItemMeasuementUnit')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GEN.Order')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_tamil', models.CharField(max_length=200)),
                ('pic', models.ImageField(blank=True, upload_to='profile_pics')),
                ('status_note', models.CharField(max_length=200)),
                ('is_available', models.BooleanField(default=True)),
                ('slug', models.SlugField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'GENDER_MALE'), ('F', 'GENDER_FEMALE'), ('O', 'GENDER_OTHERS')], default='M', max_length=10)),
                ('age', models.CharField(max_length=2, null=True)),
                ('user_m_status', models.CharField(choices=[('PTV', 'M_STATUS_POSITIVE'), ('NTV', 'M_STATUS_NEGATIVE'), ('TIP', 'M_STATUS_TEST_IN_PROGRESS'), ('NTD', 'M_STATUS_NOT_TESTED')], default='NTD', max_length=3)),
                ('phone_primary', models.CharField(default='NONE', max_length=10)),
                ('phone_secondary', models.CharField(default='NONE', max_length=10)),
                ('location_area', models.CharField(default='NONE', max_length=280)),
                ('location_sublocality', models.CharField(default='NONE', max_length=280)),
                ('location_locality', models.CharField(default='NONE', max_length=280)),
                ('symptom_total', models.IntegerField(default=0)),
                ('location_city', models.CharField(default='NONE', max_length=280)),
                ('location_state', models.CharField(choices=[('KA', 'KARNATAKA'), ('KL', 'KERALA'), ('TN', 'TAMIL_NADU'), ('AP', 'ANDRA_PRADESH'), ('MH', 'MAHARASTRA')], default='TN', max_length=80)),
                ('location_pincode', models.CharField(default='601201', max_length=6)),
                ('location_latitude', models.CharField(default='NONE', max_length=50, null=True)),
                ('location_longitude', models.CharField(default='NONE', max_length=50, null=True)),
                ('user_language', models.CharField(choices=[('ta', 'USER_LG_TAMIL'), ('en', 'USER_LG__ENGLISH'), ('hi', 'USER_LG_HINDI')], default='en', max_length=3)),
                ('user_type', models.CharField(choices=[('SR', 'SUPER_ADMIN'), ('MR', 'MANAGER'), ('CR', 'CONSUMER'), ('OF', 'GOVT_OFFICIALS'), ('BO', 'BUSINESS_OWNER'), ('CCE', 'CUSTOMER_CARE')], default='CR', max_length=3)),
                ('user_status', models.CharField(choices=[('AT', 'ACTIVE'), ('IA', 'INACTIVE'), ('DS', 'DISABLED'), ('DL', 'DELETED')], default='AT', max_length=2)),
                ('status', models.CharField(choices=[('AT', 'ACTIVE'), ('IA', 'INACTIVE'), ('DS', 'DISABLED'), ('DL', 'DELETED')], default='AT', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('guardian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_guardian', to='GEN.UserProfileInfo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLocationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_latitude', models.CharField(default='NONE', max_length=30)),
                ('location_langitude', models.CharField(default='NONE', max_length=30)),
                ('status', models.CharField(choices=[('AT', 'ACTIVE'), ('IA', 'INACTIVE'), ('DS', 'DISABLED'), ('DL', 'DELETED')], default='AT', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='GEN.UserProfileInfo')),
            ],
        ),
        migrations.CreateModel(
            name='UserHealthProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('symptom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='GEN.C19SymptomSet')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='GEN.UserProfileInfo')),
            ],
        ),
        migrations.CreateModel(
            name='ProductBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_tamil', models.CharField(max_length=200)),
                ('status_note', models.CharField(max_length=200)),
                ('is_available', models.BooleanField(default=True)),
                ('slug', models.SlugField(null=True)),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GEN.ProductCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('name_tamil', models.CharField(max_length=200)),
                ('pic', models.ImageField(blank=True, upload_to='profile_pics')),
                ('is_available', models.BooleanField(default=True)),
                ('price', models.IntegerField(blank=True, default=0)),
                ('show_price', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('P01', 'PRIORIT_01'), ('P02', 'PRIORIT_02'), ('P03', 'PRIORIT_03'), ('P04', 'PRIORIT_04'), ('P05', 'PRIORIT_05')], default='P05', max_length=3)),
                ('status_note', models.CharField(max_length=200)),
                ('status_tamil', models.CharField(max_length=200)),
                ('slug', models.SlugField(null=True)),
                ('base_measurement_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GEN.ItemMeasuementUnit')),
                ('measurement_unit', models.ManyToManyField(blank=True, related_name='mrp_umo', to='GEN.ItemMeasuementUnit')),
                ('product_base', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='GEN.ProductBase')),
            ],
        ),
        migrations.CreateModel(
            name='OrderLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('OPD', 'ORDER_PLACED'), ('OCC', 'ORDER_CONFIRMED_BY_CUSTOMER'), ('OPU', 'ORDER_PICKEDUP'), ('ODD', 'ORDER_DELIVERED'), ('OCD', 'ORDER_CANCELLED')], default='OPD', max_length=3)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status_note', models.CharField(max_length=200)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GEN.Order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('IPL', 'O_ITEM_PLACED'), ('IPD', 'O_ITEM_PICKED'), ('INA', 'O_ITEM_NOT_AVAILABLE'), ('IRD', 'O_ITEM_REMOVED'), ('IRJ', 'O_ITEM_REJECTED')], default='IPL', max_length=3)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status_note', models.CharField(max_length=200)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GEN.OrderItem')),
            ],
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='GEN.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='user_customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_customer', to='GEN.UserProfileInfo'),
        ),
        migrations.CreateModel(
            name='EPS_EnterpriseMetaModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=8, unique=True)),
                ('communication_physical', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecp', to='GEN.CMN_CommunicationPhysicalModel')),
                ('communication_virtual_slugs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecv', to='GEN.CMN_CommunicationVirtualModel')),
                ('enterprise_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ep', to='GEN.EPS_EnterpriseProfileModel')),
                ('parent_enterprise_meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GEN.EPS_EnterpriseMetaModel')),
            ],
        ),
    ]
